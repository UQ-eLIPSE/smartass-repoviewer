/* Generated By:JJTree: Do not edit this line. ASTMulti.java */

package au.edu.uq.smartassrepoeditor.templates.texparser;

import java.util.Set;
import java.util.Vector;

import au.edu.uq.smartassrepoeditor.script.Script;

public class ASTMulti extends ComplexNode {

        Vector<SimpleNode> common;
	Vector<ASTMultiChoice> choices;
	int choice_count = 1;
	
	//execute state fields
	Vector<ASTMultiChoice> selected;
	
	public void init() {
		//Extract common part and all CHOICEs from MULTIes children[]
		common = new Vector<SimpleNode>();
		choices = new Vector<ASTMultiChoice>();
		for(int i=0; i<children.length; i++) 
			if(children[i] instanceof ASTMultiChoice)
				choices.add((ASTMultiChoice)children[i]);
			else 
				if(children[i]!=null)
					common.add((SimpleNode)children[i]);
	}
	
	@Override
	public String getCode() {
		return "%%MULTI " + Integer.toString(choice_count) + "\n" + super.getCode() + "%%ENDMULTI\n";
	}
	
	@Override
	public RComplexNode execute(Set<String> sections, Script script) {
		init();
		RComplexNode result = new RComplexNode(this);
		selected = new Vector<ASTMultiChoice>();
		for(int i=0; i<common.size(); i++)  
			result.addChild(common.get(i).execute(sections, script));
		
		Vector<Integer> cs = new Vector<Integer>();
		for(int i=0;i<choices.size();i++) 
			cs.add(i);
		for(int i=0;i<choice_count && cs.size()>0;i++) {
			int idx = (int)(Math.random() * cs.size());
			ASTMultiChoice n = choices.get(cs.get(idx)); 
			selected.add(n);
			cs.remove(idx);
			result.addChild(n.execute(sections, script));
		}
		is_executed = true;
		return result;
	}
	
	public void setChoicesCount(int c) {
		choice_count = c;
	}
	
	public int getChoicesCount() {
		return choice_count;
	}
	
	@Override
	protected Object clone() throws CloneNotSupportedException {
		ASTMulti n = (ASTMulti) super.clone();
		n.init(); //set "common" and "choices" of newly created node
		return n;
	}
	
	public ASTMulti(int id) {
		super(id);
	}

	public ASTMulti(TexParser p, int id) {
		super(p, id);
	}

}
